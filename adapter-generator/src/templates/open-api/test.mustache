const source = require('./source/src/index');
const firebase = require('firebase');
const { diff } = require('deep-object-diff');
const fs = require('fs');

const firebaseConfig = {
  apiKey: "AIzaSyBqprtWjwl-DRNKIQTiTOIpKT_btIHwBqM",
  authDomain: "eval-d2be2.firebaseapp.com",
  databaseURL: "https://eval-d2be2.firebaseio.com/",
  projectId: "eval-d2be2",
  storageBucket: "eval-d2be2.appspot.com",
  messagingSenderId: "306037936402",
  appId: "1:306037936402:web:16af2bbc0e2bb2de9ea3cb",
  measurementId: "G-HRDK5LLMBK"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);

async function test(response) {
  //TODO 1: Fill in your username and password here
  await firebase.auth().signInWithEmailAndPassword("your.email@example.com", "YOUR_PASSWORD");

  console.log('Final Server Response:\n', response);

  const taskReportRef = firebase.firestore().collection('task-reports').doc('{{taskReportId}}');
  const taskReportData = await taskReportRef.get().then(snap => snap.data());

  const taskId = taskReportData.task;
  const jsonGoal = await firebase.firestore().collection('tasks').doc(taskId).get().then(snap => snap.data().goal);
  const goal = JSON.parse(jsonGoal);

  const dataDiff = diff(response, goal);

  const success = Object.keys(dataDiff).length === 0;

  await taskReportRef.update({
    firstSuccess: (success && !taskReportData.firstSuccess) ? Date.now() : (taskReportData.firstSuccess || null),
    installTime: fs.readFileSync('install_time.txt').toString() + ' seconds',
    testResults: firebase.firestore.FieldValue.arrayUnion({
      time: Date.now(),
      result: response || 'undefined',
      diff: dataDiff,
    })
  });

  if(success) {
    console.info('You successfully finished the task. NOW PLEASE RETURN TO THE TOOL WEBSITE AND CLICK ON THE "FINISH TASK" BUTTON');
  } else {
    console.warn('You have errors in your result, please fix them and try again. Your diff:', dataDiff);
  }

  process.exit(0);
}

async function main() {
  const ApiClient = source.ApiClient.instance;
  const ApiInterface = new source.DefaultApi(ApiClient);

  const request = {
    q: 'test'
  };
  try {
    //TODO 2: Call the right function
    const response = await ApiInterface.CHANGE_THIS_METHOD_NAME(request);
    await test(response);
  } catch (err) {
    console.log(err);
  }
}

main();
